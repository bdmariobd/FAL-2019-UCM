5
1 3 5 7 9
8 6 4 2 0
3
4 6 8
8 6 4
4
1 2 3 4
4 3 2 1
1
3
5
6
1 2 3 4 5 6
-1 -2 -3 -4 -5 -6
4
-1 1 4 8
1 -1 -3 -10
6
-5 -3 -1 0 4 7
9 6 5 2 1 0
5
1 2 3 4 5
20 19 18 17 16
0


//*****************
// IMPORTANTE
//
// Nombre y apellidos del alumno
// Usuario del juez de clase
// Usuario del juez de examen que has utilizado en la prueba de hoy
//
//***************************************************

#include <iostream>
#include <fstream>
#include <vector>

//*******************************
// Explicacion del algoritmo empleado
// Coste del algoritmo. Incluye recurrencia y desplegado de la recurrencia
//
// Y no olvides poner comentarios en el codigo
//*******************************

// Aqui las funciones implementadas por el alumno



bool resuelveCaso() 
{
    int numElem;
    std::cin >> numElem;
    if (numElem == 0) return false;
    std::vector<int> v1(numElem);
    std::vector<int> v2(numElem);
    for (int &i : v1) std::cin >> i;
    for (int & i: v2) std::cin >> i;

    // Aqui codigo del alumno
    
    return true;
    
}

int main() {
#ifndef DOMJUDGE
    std::ifstream in("sample.in");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif

    while (resuelveCaso())
        ;
    
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    system("PAUSE");
#endif

    return 0;
}